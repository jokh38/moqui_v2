digraph "mqi::tps_env::tps_env"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="mqi::tps_env::tps_env",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Constructs a new tps_env object."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="mqi::treatment_session\l::get_beam_name",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1treatment__session.html#ad2dc422ddcde2d8264390d0571ba832b",tooltip="Retrieves the name of a beam given its number."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="mqi::trim_copy",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacemqi.html#aa0eab400a55a6a7957d2b4eb8391916b",tooltip="Removes leading and trailing whitespace from a string."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="mqi::trim_left_copy",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacemqi.html#ae5afdecf41c73ac5ca33fb96dfab63f6",tooltip="Removes leading whitespace from a string."];
  Node3 -> Node5 [id="edge4_Node000003_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="mqi::trim_right_copy",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacemqi.html#a44092bf42c4446f872fd67a0fd085e6d",tooltip="Removes trailing whitespace from a string."];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="mqi::file_parser::get_bool",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1file__parser.html#a134f7f1c8c8e7aaf72609a7b2b173e7d",tooltip="Gets a boolean value for a given option key."];
  Node6 -> Node7 [id="edge6_Node000006_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="mqi::file_parser::get\l_string",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1file__parser.html#ab0657016c2d8aea0fb323575542b5516",tooltip="Gets a string value for a given configuration option (key)."];
  Node7 -> Node3 [id="edge7_Node000007_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node8 [id="edge8_Node000001_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="mqi::file_parser::get\l_float",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1file__parser.html#ac1bdf2a9bbbffa187aa5f5ec00b4f95c",tooltip="Gets a float value for a given option key."];
  Node8 -> Node7 [id="edge9_Node000008_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node9 [id="edge10_Node000001_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="mqi::file_parser::get\l_float_vector",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1file__parser.html#ada8e0c36ddadee64a5df79823a15e4ce",tooltip="Gets a vector of floats for a given option key."];
  Node9 -> Node10 [id="edge11_Node000009_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="mqi::file_parser::get\l_string_vector",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1file__parser.html#a451e41063332b20d9860e96b8da63ed2",tooltip="Gets a vector of strings for a given option key, where values are separated by a delimiter."];
  Node10 -> Node7 [id="edge12_Node000010_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node10 -> Node3 [id="edge13_Node000010_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node11 [id="edge14_Node000001_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="mqi::file_parser::get_int",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1file__parser.html#a7118fd98bf8610b8d06f110f8e744824",tooltip="Gets an integer value for a given option key."];
  Node11 -> Node7 [id="edge15_Node000011_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node12 [id="edge16_Node000001_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="mqi::file_parser::get\l_int_vector",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1file__parser.html#a88ae62743f4db2d5ca7daf8ad20ab7d8",tooltip="Gets a vector of integers for a given option key."];
  Node12 -> Node10 [id="edge17_Node000012_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node13 [id="edge18_Node000001_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="mqi::treatment_session\l::get_num_beams",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1treatment__session.html#abdc58fee029f401bc9f49d5bd50a7232",tooltip="Gets the total number of beams in the treatment plan."];
  Node1 -> Node7 [id="edge19_Node000001_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node10 [id="edge20_Node000001_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node14 [id="edge21_Node000001_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="mqi::tps_env::read\l_dcm_dir",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1tps__env.html#ab80aef53cd3e31b2f19cd70b5041ae6b",tooltip="Reads DICOM files from the specified directory and populates the dicom_t struct."];
  Node14 -> Node15 [id="edge22_Node000014_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="mqi::tps_env::fill\l_contour",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1tps__env.html#a4cb04ffc9d36486d9143b3de5a8fa355",tooltip="Fills a volume with a contour, creating a binary mask."];
  Node15 -> Node16 [id="edge23_Node000015_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="mqi::tps_env::sol1_1",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1tps__env.html#a12217174121765900d5b6cecdf1ca2e3",tooltip="A point-in-polygon test to determine if a point is inside a contour."];
  Node14 -> Node14 [id="edge24_Node000014_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node17 [id="edge25_Node000001_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="mqi::file_parser::string\l_to_scorer_type",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1file__parser.html#a549fde5e114de9d163217b5845c3e10f",tooltip="Converts a scorer name string to its corresponding scorer_t enum value."];
  Node1 -> Node18 [id="edge26_Node000001_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="mqi::file_parser::string\l_to_sim_type",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1file__parser.html#ac350aba39c58bc0d5aa788a7647fbb7c",tooltip="Converts a simulation type string to its corresponding sim_type_t enum value."];
  Node1 -> Node19 [id="edge27_Node000001_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="mqi::x_environment\l::x_environment",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1x__environment.html#a4839d54637230844204a00f9eca68c6f",tooltip="Default constructor for the x_environment class."];
}
