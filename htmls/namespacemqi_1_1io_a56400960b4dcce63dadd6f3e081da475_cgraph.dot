digraph "mqi::io::save_to_npz2"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="mqi::io::save_to_npz2",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Saves scorer data to a compressed NumPy .npz file in voxel-major CSR format."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="mqi::roi_t::get_mask_idx",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1roi__t.html#a9764dd2d41712af6b7e16588dcc953a1",tooltip="Gets the final index within the flattened ROI data array for a given transport index."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="mqi::roi_t::get_contour_idx",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1roi__t.html#a9a212c570127c7bfd095ea5c262e5be4",tooltip="Calculates the ROI mask index for a transport index using the CONTOUR (run-length-encoded) method."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="mqi::roi_t::lower_bound_cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1roi__t.html#a2aeb34103c1b74ae019ea7215991c81b",tooltip="A custom binary search implementation to find the lower bound of a value in the start_ array."];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="mqi::roi_t::get_mask_size",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1roi__t.html#a41a098bbf69a543073f92d48c60ef694",tooltip="Gets the total number of voxels in the ROI."];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="mqi::io::save_npz",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacemqi_1_1io.html#a4d4301444a704ee38b9c69109c2b7519",tooltip="Saves a std::string as a variable in a .npz file."];
  Node6 -> Node7 [id="edge6_Node000006_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="mqi::io::map_type",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacemqi_1_1io.html#aaf36ad3e258a799467d01ba89c4fb85c",tooltip="Maps a C++ typeid to a NumPy type character code."];
  Node6 -> Node8 [id="edge7_Node000006_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="mqi::io::parse_zip\l_footer",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacemqi_1_1io.html#a75437f69b4965bc184309762825b95e0",tooltip="Parses the End of Central Directory Record (EOCD) of a ZIP file."];
  Node6 -> Node9 [id="edge8_Node000006_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="mqi::io::push_value",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacemqi_1_1io.html#ac863aaac9954cd36277bf4720a22feca",tooltip="Appends the bytes of a std::string to a character vector."];
}
