digraph "main"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="main",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="The main function for the TPS environment executable."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="mqi::tps_env::initialize\l_and_run",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1tps__env.html#ab99846553d1f27bb6b0f7b8ad10aaaaf",tooltip="Initializes and runs the simulation for all specified beams."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="mqi::x_environment\l::finalize",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1x__environment.html#a8e860bd71f938cb81e77a27723b58732",tooltip="Finalizes the simulation and cleans up resources."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="mqi::check_cuda_last\l_error",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacemqi.html#a9fd7d7da4b085c3866d492ae78576597",tooltip="Checks for any asynchronous errors returned by the CUDA runtime."];
  Node2 -> Node5 [id="edge4_Node000002_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="mqi::x_environment\l::initialize",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1x__environment.html#adb56b2f835fedd10befb49bd5f44883b",tooltip="Initializes the simulation environment."];
  Node5 -> Node4 [id="edge5_Node000005_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node5 -> Node6 [id="edge6_Node000005_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="mc::print_materials",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacemc.html#aadfa7a8088f12d9c73e114513fa40fac",tooltip="CUDA kernel to print properties of materials on the GPU."];
  Node5 -> Node7 [id="edge7_Node000005_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="mc::print_node_specification",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacemc.html#ac8af900126bcee7a5ca597eb68cb635f",tooltip="CUDA kernel to print the specifications of a node and its children."];
  Node7 -> Node8 [id="edge8_Node000007_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="mqi::grid3d::get_nxyz",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1grid3d.html#ad2ce2ce3583b02a860b0ba883418c924",tooltip="Gets the dimensions of the grid (number of voxels)."];
  Node7 -> Node9 [id="edge9_Node000007_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="mqi::grid3d::get_x\l_edges",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1grid3d.html#a39ca84cdae9fae75801fb416cd7d3288",tooltip="Gets the array of x-edge coordinates."];
  Node7 -> Node10 [id="edge10_Node000007_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="mqi::grid3d::get_y\l_edges",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1grid3d.html#a9dc2274b42225b30814f1bf104ffdd48",tooltip="Gets the array of y-edge coordinates."];
  Node7 -> Node11 [id="edge11_Node000007_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="mqi::grid3d::get_z\l_edges",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1grid3d.html#a31aef33bc66488c4bda974f5fab1f205",tooltip="Gets the array of z-edge coordinates."];
  Node7 -> Node7 [id="edge12_Node000007_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 -> Node12 [id="edge13_Node000007_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="mc::print_node_specification_gpu",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacemc.html#ab3ce3bd834691406abf7691ce60b31c7",tooltip="CUDA device function to print the specifications of a node on the GPU."];
  Node12 -> Node8 [id="edge14_Node000012_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node12 -> Node9 [id="edge15_Node000012_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node12 -> Node10 [id="edge16_Node000012_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node12 -> Node11 [id="edge17_Node000012_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node5 -> Node13 [id="edge18_Node000005_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="mqi::x_environment\l::setup_beamsource",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1x__environment.html#aac96e9dc6117fafece37ffbda4fdae30",tooltip="Pure virtual method to set up the beam source."];
  Node5 -> Node14 [id="edge19_Node000005_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="mqi::x_environment\l::setup_world",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1x__environment.html#ab8693c74fcec60f2b9e6aa7354ff5a91",tooltip="Pure virtual method to set up the world geometry."];
  Node2 -> Node15 [id="edge20_Node000002_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="mqi::tps_env::run",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1tps__env.html#a815e21607d6af016fa9eea6096ba066b",tooltip="Runs the simulation based on the specified simulation type (per-beam or per-spot)."];
  Node15 -> Node16 [id="edge21_Node000015_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="mqi::tps_env::run_by_beam",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1tps__env.html#a5fc73242d27283f2b4e911aada6b3f21",tooltip="Runs the simulation on a per-beam basis."];
  Node16 -> Node17 [id="edge22_Node000016_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="mqi::mqi_ceil",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacemqi.html#aee3f02e2a711cdc6833a040492f7fc7d",tooltip="Calculates the ceiling of a number. Wrapper for ceil or ceilf."];
  Node16 -> Node18 [id="edge23_Node000016_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="mqi::tps_env::run_simulation",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1tps__env.html#adcf39a30ee258747d918e5ba5b3c8ddb",tooltip="Runs a batch of the simulation."];
  Node18 -> Node4 [id="edge24_Node000018_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node18 -> Node19 [id="edge25_Node000018_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="mqi::initialize_threads",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacemqi.html#aaa7cca28b017d7716999a779df765956",tooltip="Initializes an array of thread-local data structures, primarily for seeding random number generators."];
  Node18 -> Node20 [id="edge26_Node000018_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="mc::transport_particles\l_patient",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$namespacemc.html#ad4274be120fe0d5fd68795d74fc1770d",tooltip="CUDA kernel for transporting particles through a patient geometry."];
  Node20 -> Node8 [id="edge27_Node000020_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node20 -> Node21 [id="edge28_Node000020_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="mqi::grid3d::ijk2cnb",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1grid3d.html#a124ac978806168aacfa923fdd3c30815",tooltip="Converts a 3D index (i,j,k) to a 1D flattened index (\"copy number\")."];
  Node20 -> Node22 [id="edge29_Node000020_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="mqi::grid3d::index",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1grid3d.html#a96b33890b3faf15de1aa20be853ee6c7",tooltip="Finds the 3D index of the voxel containing a given point."];
  Node20 -> Node23 [id="edge30_Node000020_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="mc::insert_hashtable",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$namespacemc.html#a4d16a19d1406115aa75fbd7e06670f84",tooltip="Inserts a key-value pair into a hash table using atomic operations."];
  Node20 -> Node26 [id="edge31_Node000020_Node000026",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="mqi::grid3d::intersect",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1grid3d.html#ac3eacc47abd7206b761b2d13db7cf7b1",tooltip="Calculates the intersection of a ray with the boundaries of the current voxel."];
  Node20 -> Node27 [id="edge32_Node000020_Node000027",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="mqi::track_stack_t\l::is_empty",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1track__stack__t.html#a990f65c65ed428f8f8e3bd676360e7de",tooltip="Checks if the stack is empty."];
  Node20 -> Node28 [id="edge33_Node000020_Node000028",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="mqi::track_t::is_stopped",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1track__t.html#a8b3e9c2d3820bb4e6b2221ed46098a85",tooltip="Checks if the track's status is STOPPED."];
  Node20 -> Node29 [id="edge34_Node000020_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="mqi::grid3d::is_valid",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1grid3d.html#a7e917968d3996f7eb1e75397e9dbd81b",tooltip="Checks if a given 3D index is within the valid grid boundaries."];
  Node20 -> Node30 [id="edge35_Node000020_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="mqi::track_t::move",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1track__t.html#a27665f7a0784424157f5d17826951145",tooltip="Finalizes the current step and prepares for the next one."];
  Node20 -> Node31 [id="edge36_Node000020_Node000031",color="steelblue1",style="solid",tooltip=" "];
  Node31 [id="Node000031",label="mqi::vec3::normalize",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1vec3.html#ac0bb2cebe4fbfbed9155262841c426f9",tooltip="Normalizes the vector to unit length."];
  Node20 -> Node32 [id="edge37_Node000020_Node000032",color="steelblue1",style="solid",tooltip=" "];
  Node32 [id="Node000032",label="mqi::track_stack_t::pop",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1track__stack__t.html#af69d582704419d0d12c5d441d9df9676",tooltip="Removes and returns the track from the top of the stack."];
  Node20 -> Node33 [id="edge38_Node000020_Node000033",color="steelblue1",style="solid",tooltip=" "];
  Node33 [id="Node000033",label="mqi::track_stack_t\l::push_secondary",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1track__stack__t.html#a54dd3bc633b0c06c1ffa671a2e219d9e",tooltip="Pushes a secondary track onto the top of the stack."];
  Node20 -> Node34 [id="edge39_Node000020_Node000034",color="steelblue1",style="solid",tooltip=" "];
  Node34 [id="Node000034",label="mqi::start_and_length",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacemqi.html#a5874eaa37c0b37f218da6afb747babd3",tooltip="Calculates the starting index and number of jobs for a specific thread."];
  Node20 -> Node35 [id="edge40_Node000020_Node000035",color="steelblue1",style="solid",tooltip=" "];
  Node35 [id="Node000035",label="mqi::fippel_physics\l::stepping",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classmqi_1_1fippel__physics.html#aec06891380034c07deb8bdd0129faa86",tooltip="Determines the step length and samples discrete interactions for a particle track."];
  Node15 -> Node49 [id="edge41_Node000015_Node000049",color="steelblue1",style="solid",tooltip=" "];
  Node49 [id="Node000049",label="mqi::tps_env::run_by_spot",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1tps__env.html#a57a32b1551abb79ca6a59e5864560d4f",tooltip="Runs the simulation on a per-spot basis."];
  Node49 -> Node17 [id="edge42_Node000049_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node49 -> Node50 [id="edge43_Node000049_Node000050",color="steelblue1",style="solid",tooltip=" "];
  Node50 [id="Node000050",label="mqi::tps_env::read\l_vertices_spot",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1tps__env.html#a9b6fa071b498c70e13eb7b16e3294b20",tooltip="Reads vertices for a spot and populates the vertices and score offset vector."];
  Node49 -> Node18 [id="edge44_Node000049_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node51 [id="edge45_Node000002_Node000051",color="steelblue1",style="solid",tooltip=" "];
  Node51 [id="Node000051",label="mqi::tps_env::save\l_reshaped_files",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1tps__env.html#a6c46039ec5f8ad11f01812443d60e050",tooltip="Saves the reshaped simulation results to files in various formats (mhd, mha, raw)."];
  Node51 -> Node52 [id="edge46_Node000051_Node000052",color="steelblue1",style="solid",tooltip=" "];
  Node52 [id="Node000052",label="mqi::treatment_session\l::get_beam_names",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1treatment__session.html#ab34ece772cc061bfa0416479129787ab",tooltip="Retrieves a list of all beam names from the treatment plan."];
  Node52 -> Node53 [id="edge47_Node000052_Node000053",color="steelblue1",style="solid",tooltip=" "];
  Node53 [id="Node000053",label="mqi::trim_copy",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacemqi.html#aa0eab400a55a6a7957d2b4eb8391916b",tooltip="Removes leading and trailing whitespace from a string."];
  Node53 -> Node54 [id="edge48_Node000053_Node000054",color="steelblue1",style="solid",tooltip=" "];
  Node54 [id="Node000054",label="mqi::trim_left_copy",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacemqi.html#ae5afdecf41c73ac5ca33fb96dfab63f6",tooltip="Removes leading whitespace from a string."];
  Node53 -> Node55 [id="edge49_Node000053_Node000055",color="steelblue1",style="solid",tooltip=" "];
  Node55 [id="Node000055",label="mqi::trim_right_copy",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacemqi.html#a44092bf42c4446f872fd67a0fd085e6d",tooltip="Removes trailing whitespace from a string."];
  Node51 -> Node56 [id="edge50_Node000051_Node000056",color="steelblue1",style="solid",tooltip=" "];
  Node56 [id="Node000056",label="mqi::tps_env::reshape_data",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1tps__env.html#a8148f76d075e80579c3982f1e26edc65",tooltip="Reshapes the scored data from a sparse format to a dense 3D grid."];
  Node51 -> Node57 [id="edge51_Node000051_Node000057",color="steelblue1",style="solid",tooltip=" "];
  Node57 [id="Node000057",label="mqi::io::save_to_bin",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacemqi_1_1io.html#a3d7d08b8b674430cce1d0a3d63b426f1",tooltip="Saves sparse scorer data to separate binary files."];
  Node51 -> Node58 [id="edge52_Node000051_Node000058",color="steelblue1",style="solid",tooltip=" "];
  Node58 [id="Node000058",label="mqi::io::save_to_mha",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacemqi_1_1io.html#af9fe1e2896ecde77dbacfd8b4cac22d6",tooltip="Saves volumetric data to a single MetaImage file (.mha)."];
  Node58 -> Node8 [id="edge53_Node000058_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node58 -> Node9 [id="edge54_Node000058_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node58 -> Node10 [id="edge55_Node000058_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node58 -> Node11 [id="edge56_Node000058_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node51 -> Node59 [id="edge57_Node000051_Node000059",color="steelblue1",style="solid",tooltip=" "];
  Node59 [id="Node000059",label="mqi::io::save_to_mhd",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacemqi_1_1io.html#a87f96ca392c65b5d3336237e788a8f2f",tooltip="Saves volumetric data to a MetaImage header/raw file pair (.mhd/.raw)."];
  Node59 -> Node8 [id="edge58_Node000059_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node59 -> Node9 [id="edge59_Node000059_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node59 -> Node10 [id="edge60_Node000059_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node59 -> Node11 [id="edge61_Node000059_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node60 [id="edge62_Node000002_Node000060",color="steelblue1",style="solid",tooltip=" "];
  Node60 [id="Node000060",label="mqi::tps_env::save\l_sparse_file",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmqi_1_1tps__env.html#a8704f4b05c3694c287abfba698d12663",tooltip="Saves the simulation results in a sparse format (npz)."];
  Node60 -> Node52 [id="edge63_Node000060_Node000052",color="steelblue1",style="solid",tooltip=" "];
  Node60 -> Node61 [id="edge64_Node000060_Node000061",color="steelblue1",style="solid",tooltip=" "];
  Node61 [id="Node000061",label="mqi::io::save_to_npz",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacemqi_1_1io.html#acbc8b7d90491f5ea50186e5912871c19",tooltip="Saves scorer data to a compressed NumPy .npz file in spot-major CSR format."];
  Node61 -> Node62 [id="edge65_Node000061_Node000062",color="steelblue1",style="solid",tooltip=" "];
  Node62 [id="Node000062",label="mqi::io::save_npz",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacemqi_1_1io.html#a4d4301444a704ee38b9c69109c2b7519",tooltip="Saves a std::string as a variable in a .npz file."];
  Node62 -> Node63 [id="edge66_Node000062_Node000063",color="steelblue1",style="solid",tooltip=" "];
  Node63 [id="Node000063",label="mqi::io::map_type",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacemqi_1_1io.html#aaf36ad3e258a799467d01ba89c4fb85c",tooltip="Maps a C++ typeid to a NumPy type character code."];
  Node62 -> Node64 [id="edge67_Node000062_Node000064",color="steelblue1",style="solid",tooltip=" "];
  Node64 [id="Node000064",label="mqi::io::parse_zip\l_footer",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacemqi_1_1io.html#a75437f69b4965bc184309762825b95e0",tooltip="Parses the End of Central Directory Record (EOCD) of a ZIP file."];
  Node62 -> Node65 [id="edge68_Node000062_Node000065",color="steelblue1",style="solid",tooltip=" "];
  Node65 [id="Node000065",label="mqi::io::push_value",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacemqi_1_1io.html#ac863aaac9954cd36277bf4720a22feca",tooltip="Appends the bytes of a std::string to a character vector."];
}
